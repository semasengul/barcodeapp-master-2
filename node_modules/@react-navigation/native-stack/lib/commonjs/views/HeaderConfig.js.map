{"version":3,"sources":["HeaderConfig.tsx"],"names":["HeaderConfig","props","route","title","headerRight","headerTitle","headerBackTitle","headerBackTitleVisible","headerHideBackButton","headerHideShadow","headerTintColor","headerLargeTitle","headerTranslucent","headerStyle","headerTitleStyle","headerLargeTitleStyle","headerBackTitleStyle","headerShown","gestureEnabled","undefined","name","fontFamily","fontSize","color","backgroundColor"],"mappings":"2KAAA,oDACA,wD,kHAce,QAASA,CAAAA,YAAT,CAAsBC,KAAtB,CAAoC,IAE/CC,CAAAA,KAF+C,CAmB7CD,KAnB6C,CAE/CC,KAF+C,CAG/CC,KAH+C,CAmB7CF,KAnB6C,CAG/CE,KAH+C,CAI/CC,WAJ+C,CAmB7CH,KAnB6C,CAI/CG,WAJ+C,CAK/CC,WAL+C,CAmB7CJ,KAnB6C,CAK/CI,WAL+C,CAM/CC,eAN+C,CAmB7CL,KAnB6C,CAM/CK,eAN+C,uBAmB7CL,KAnB6C,CAO/CM,sBAP+C,CAO/CA,sBAP+C,gCAOtB,IAPsB,uBAQ/CC,oBAR+C,CAmB7CP,KAnB6C,CAQ/CO,oBAR+C,CAS/CC,gBAT+C,CAmB7CR,KAnB6C,CAS/CQ,gBAT+C,CAU/CC,eAV+C,CAmB7CT,KAnB6C,CAU/CS,eAV+C,CAW/CC,gBAX+C,CAmB7CV,KAnB6C,CAW/CU,gBAX+C,CAY/CC,iBAZ+C,CAmB7CX,KAnB6C,CAY/CW,iBAZ+C,oBAmB7CX,KAnB6C,CAa/CY,WAb+C,CAa/CA,WAb+C,6BAajC,EAbiC,0CAmB7CZ,KAnB6C,CAc/Ca,gBAd+C,CAc/CA,gBAd+C,gCAc5B,EAd4B,6CAmB7Cb,KAnB6C,CAe/Cc,qBAf+C,CAe/CA,qBAf+C,gCAevB,EAfuB,8CAmB7Cd,KAnB6C,CAgB/Ce,oBAhB+C,CAgB/CA,oBAhB+C,iCAgBxB,EAhBwB,wBAiB/CC,WAjB+C,CAmB7ChB,KAnB6C,CAiB/CgB,WAjB+C,CAkB/CC,cAlB+C,CAmB7CjB,KAnB6C,CAkB/CiB,cAlB+C,CAqBjD,MACE,qBAAC,2CAAD,EACE,MAAM,CAAED,WAAW,GAAK,KAD1B,CAEE,WAAW,CAAEL,iBAAiB,GAAK,IAFrC,CAGE,UAAU,CAAEH,gBAHd,CAIE,cAAc,CAAED,oBAJlB,CAKE,KAAK,CACHH,WAAW,GAAKc,SAAhB,CACId,WADJ,CAEIF,KAAK,GAAKgB,SAAV,CACAhB,KADA,CAEAD,KAAK,CAACkB,IAVd,CAYE,eAAe,CAAEN,gBAAgB,CAACO,UAZpC,CAaE,aAAa,CAAEP,gBAAgB,CAACQ,QAblC,CAcE,UAAU,CACRR,gBAAgB,CAACS,KAAjB,GAA2BJ,SAA3B,CACIL,gBAAgB,CAACS,KADrB,CAEIb,eAjBR,CAmBE,SAAS,CAAEH,sBAAsB,CAAGD,eAAH,CAAqB,EAnBxD,CAoBE,mBAAmB,CAAEU,oBAAoB,CAACK,UApB5C,CAqBE,iBAAiB,CAAEL,oBAAoB,CAACM,QArB1C,CAsBE,KAAK,CAAEZ,eAtBT,CAuBE,cAAc,CAAEQ,cAAc,GAAKC,SAAnB,CAA+B,IAA/B,CAAsCD,cAvBxD,CAwBE,UAAU,CAAEP,gBAxBd,CAyBE,oBAAoB,CAAEI,qBAAqB,CAACM,UAzB9C,CA0BE,kBAAkB,CAAEN,qBAAqB,CAACO,QA1B5C,CA2BE,eAAe,CAAET,WAAW,CAACW,eA3B/B,iDA6BGpB,WAAW,GAAKe,SAAhB,CACC,oBAAC,8CAAD,kDAA6Bf,WAAW,EAAxC,CADD,CAEG,IA/BN,CADF,CAmCD","sourcesContent":["import * as React from 'react';\nimport {\n  // @ts-ignore\n  ScreenStackHeaderConfig,\n  // @ts-ignore\n  ScreenStackHeaderRightView,\n  // eslint-disable-next-line import/no-unresolved\n} from 'react-native-screens';\nimport { Route } from '@react-navigation/core';\nimport { NativeStackNavigationOptions } from '../types';\n\ntype Props = NativeStackNavigationOptions & {\n  route: Route<string>;\n};\n\nexport default function HeaderConfig(props: Props) {\n  const {\n    route,\n    title,\n    headerRight,\n    headerTitle,\n    headerBackTitle,\n    headerBackTitleVisible = true,\n    headerHideBackButton,\n    headerHideShadow,\n    headerTintColor,\n    headerLargeTitle,\n    headerTranslucent,\n    headerStyle = {},\n    headerTitleStyle = {},\n    headerLargeTitleStyle = {},\n    headerBackTitleStyle = {},\n    headerShown,\n    gestureEnabled,\n  } = props;\n\n  return (\n    <ScreenStackHeaderConfig\n      hidden={headerShown === false}\n      translucent={headerTranslucent === true}\n      hideShadow={headerHideShadow}\n      hideBackButton={headerHideBackButton}\n      title={\n        headerTitle !== undefined\n          ? headerTitle\n          : title !== undefined\n          ? title\n          : route.name\n      }\n      titleFontFamily={headerTitleStyle.fontFamily}\n      titleFontSize={headerTitleStyle.fontSize}\n      titleColor={\n        headerTitleStyle.color !== undefined\n          ? headerTitleStyle.color\n          : headerTintColor\n      }\n      backTitle={headerBackTitleVisible ? headerBackTitle : ''}\n      backTitleFontFamily={headerBackTitleStyle.fontFamily}\n      backTitleFontSize={headerBackTitleStyle.fontSize}\n      color={headerTintColor}\n      gestureEnabled={gestureEnabled === undefined ? true : gestureEnabled}\n      largeTitle={headerLargeTitle}\n      largeTitleFontFamily={headerLargeTitleStyle.fontFamily}\n      largeTitleFontSize={headerLargeTitleStyle.fontSize}\n      backgroundColor={headerStyle.backgroundColor}\n    >\n      {headerRight !== undefined ? (\n        <ScreenStackHeaderRightView>{headerRight()}</ScreenStackHeaderRightView>\n      ) : null}\n    </ScreenStackHeaderConfig>\n  );\n}\n"]}